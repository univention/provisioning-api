[project]
name = "nubus-provisioning-metapackage"
version = "0.1.0"
description = "Univention Nubus - Provisioning meta-package to enable a streamlined development experience"
readme = "README.md"
package-mode = false
authors = [
    {name = "Univention GmbH", email = "packages@univention.de"},
]
license = {text = "AGPL-3.0-only"}

requires-python = "==3.11.*"

dependencies = [
    "nubus-provisioning-backends-core",
    "nubus-provisioning-common",
    "nubus-provisioning-consumer",
    "nubus-provisioning-consumer-example",
    "nubus-provisioning-dispatcher",
    "nubus-provisioning-prefill",
    "nubus-provisioning-rest-api",
    "nubus-provisioning-udm-transformer",
]

[dependency-groups]
dev = [
    "mock>=5.1.0",
    "polyfactory==2.17.0",
    "pytest<9.0.0,>=8.3.3",
    "pytest-asyncio<1.0,>=0.24",
    "pytest-cov<6.0,>=5.0",
    "pytest-env<2.0.0,>=1.1.5",
]

[tool.uv.sources]
nubus-provisioning-backends-core = { path = "./backends-core", editable = true }
nubus-provisioning-common = { path = "./common", editable = true }
nubus-provisioning-consumer = { path = "./consumer", editable = true }
nubus-provisioning-consumer-example = { path = "./consumer_example", editable = true }
nubus-provisioning-dispatcher = { path = "./dispatcher", editable = true }
nubus-provisioning-prefill = { path = "./prefill", editable = true }
nubus-provisioning-rest-api = { path = "./rest-api", editable = true }
nubus-provisioning-udm-transformer = { path = "./udm-transformer", editable = true }

[tool.hatch.build.targets.wheel]
packages = ["tests/test_helpers"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Exclude e2e_tests from execution by default
[tool.pytest.ini_options]
testpaths = [
  "backends/tests/",
  "common/tests/",
  "consumer/tests/",
  "dispatcher/tests/",
  "prefill/tests/",
  "rest-api/tests/",
  "tests/integration/",
  "udm-transformer/tests/",
]

# The following works only with pytest-env>=1.1 (and Python 3.8+), which we'll get in the test Docker container.
[tool.pytest_env]
ADMIN_USERNAME = {value = "admin", skip_if_set = true}
ADMIN_PASSWORD = {value = "provisioning", skip_if_set = true}
UDM_USERNAME = {value = "cn=admin", skip_if_set = true}
UDM_PASSWORD = {value = "univention", skip_if_set = true}
LDAP_PORT = {value = 389, skip_if_set = true}
LDAP_HOST = {value = "ldap-server", skip_if_set = true}
TLS_MODE = {value = "off", skip_if_set = true}
LDAP_BASE_DN = {value = "dc=univention-organization,dc=intranet", skip_if_set = true}
LDAP_HOST_DN = {value = "cn=admin,{LDAP_BASE_DN}", transform = true}
NATS_HOST = {value = "foo", skip_if_set = true}
NATS_PORT = {value = 1234, skip_if_set = true}
NATS_USER = {value = "api", skip_if_set = true}
NATS_PASSWORD = {value = "apipass", skip_if_set = true}
NATS_MAX_RECONNECT_ATTEMPTS = {value = 2, skip_if_set = true}
NATS_MESSAGE_REPLICAS = {value = 3, skip_if_set = true}
ADMIN_NATS_USER = {value = "admin", skip_if_set = true}
ADMIN_NATS_PASSWORD = {value = "univention", skip_if_set = true}
PROVISIONING_API_BASE_URL = {value = "http://localhost:7777", skip_if_set = true}
PROVISIONING_API_USERNAME = {value = "foo", skip_if_set = true}
PROVISIONING_API_PASSWORD = {value = "bar", skip_if_set = true}
PREFILL_USERNAME = {value = "prefill", skip_if_set = true}
PREFILL_PASSWORD = {value = "prefillpass", skip_if_set = true}
MAX_PREFILL_ATTEMPTS = {value = 10, skip_if_set = true}
EVENTS_USERNAME_UDM = {value = "udm", skip_if_set = true}
EVENTS_PASSWORD_UDM = {value = "udmpass", skip_if_set = true}
LOG_LEVEL = {value = "DEBUG", skip_if_set = true}
MAX_ACKNOWLEDGEMENT_RETRIES = {value = 3, skip_if_set = true}
DEBUG = {value = "false", skip_if_set = true}
ROOT_PATH = {value = "/", skip_if_set = true}
CORS_ALL = {value = "false", skip_if_set = true}

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
extend-select = ["I"]  # activate isort

[tool.ruff.lint.isort]
known-first-party = ["univention"]
known-third-party = ["difflib"]
