[tool.poetry]
name = "nubus-provisioning-consumer"
version = "0.1.0"
description = "Univention Nubus - Provisioning Consumer"
authors = ["Univention GmbH <packages@univention.de>"]
license = "GNU Affero General Public License v3"
readme = "README.md"
packages = [{ include = "univention", from = "src" }]

[tool.poetry.dependencies]
aiohttp = "^3.10.9"
jsondiff = "^2.2.1"
nubus-provisioning-common = ">=0.1.0"
pydantic = "^2.9.2"
pydantic-settings = "^2.5.2"
python = "^3.11"

[tool.poetry.group.dev.dependencies]
nubus-provisioning-tests = ">=0.1.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24"
pytest-cov = "^5.0"
pytest-env = "^1.1.5"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov=src/univention/provisioning/consumer",
    "--cov=tests",
    "--cov-report=term-missing",
]
asyncio_mode = "auto"
log_cli = 0  # activate on the CLI with: "-o log_cli=true"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s %(levelname)-5s [%(module)s.%(funcName)s:%(lineno)d] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S:%f"

[tool.pytest_env]
LOG_LEVEL = {value = "DEBUG", skip_if_set = true}
MAX_ACKNOWLEDGEMENT_RETRIES = {value = 3, skip_if_set = true}
PROVISIONING_API_BASE_URL = {value = "http://localhost:7777", skip_if_set = true}
PROVISIONING_API_PASSWORD = {value = "bar", skip_if_set = true}
PROVISIONING_API_USERNAME = {value = "foo", skip_if_set = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
