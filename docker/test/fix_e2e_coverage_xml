#!/usr/bin/env python3
# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH


import re
import sys

RE_PKG_NAME = re.compile(r'.*<package name="(.+?)" ')
RE_FILE_NAME = re.compile(r'.*<class name=".+" filename="(.+?)" ')

PY_PKG_TO_PRJ = {
    ".": "listener",
    "univention.provisioning.backends": "backends",
    "univention.provisioning.consumer": "consumer",
    "univention.provisioning.consumer_example": "consumer_example",
    "univention.provisioning.dispatcher": "dispatcher",
    "univention.provisioning.listener": "listener",
    "univention.provisioning.models": "common",
    "univention.provisioning.prefill": "prefill",
    "univention.provisioning.rest": "rest-api",
    "univention.provisioning.utils": "common",
    "univention.provisioning.udm_transformer": "udm-transformer",
}

prefix = ""

with open(sys.argv[2], "w") as out_fp:
    for num, line in enumerate(open(sys.argv[1]), start=1):
        if m := re.match(RE_PKG_NAME, line):
            py_pkg = m.group(1)
            print(f"Found package name: {py_pkg!r}.")
            if m.group(1) not in PY_PKG_TO_PRJ:
                print(f"WARNING: Unknown Python package {py_pkg!r}.")
                continue
            prefix = f"{PY_PKG_TO_PRJ[py_pkg]}/src/"
            print(f"Set prefix to: {prefix!r}.")
            out_fp.write(line)
        elif m := re.match(RE_FILE_NAME, line):
            file_name = m.group(1)
            print(f"Found file name: {file_name!r}.")
            new_file_name = prefix + file_name
            print(f"New file name: {new_file_name!r}.")
            new_line = line.replace(f'filename="{file_name}"', f'filename="{new_file_name}"')
            out_fp.write(new_line)
        else:
            out_fp.write(line)
