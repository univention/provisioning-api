# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
# The global properties are used to configure multiple charts at once.
global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"
  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  # "IfNotPresent" => The image is pulled only if it is not already present locally.
  # "Always" => Every time the kubelet launches a container, the kubelet queries the container image registry to
  #             resolve the name to an image digest. If the kubelet has a container image with that exact digest cached
  #             locally, the kubelet uses its cached image; otherwise, the kubelet pulls the image with the resolved
  #             digest, and uses that image to launch the container.
  # "Never" => The kubelet does not try fetching the image. If the image is somehow already present locally, the
  #            kubelet attempts to start the container; otherwise, startup fails.
  imagePullPolicy: null

affinity: {}
environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
replicaCount: 1
securityContext: {}
tolerations: []
mountSecrets: true

# Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # -- Enable security context.
  enabled: true
  # -- Process user id.
  runAsUser: 102
  # -- Process group id.
  runAsGroup: 65534
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

# Pod Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  # -- Enable security context.
  enabled: true

  # -- If specified, all processes of the container are also part of the supplementary group.
  fsGroup: 65534

  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"

  # -- Allow binding to ports below 1024 without root access.
  sysctls: []

# Define extra init containers.
#
# Ref.: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
extraInitContainers: []

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# -- Credentials to fetch images from private registry.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
# imagePullSecrets:
#   - "docker-registry"
imagePullSecrets: []

image:
  registry: ""
  repository: "nubus-dev/images/provisioning-udm-listener"
  imagePullPolicy: null
  tag: "0.28.3@sha256:b9c452e55e6716f93309bef0af7d401e218cd1e6ea9ad3d2819fb10dd631aecd"

waitForDependency:
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  image:
    registry: null
    pullPolicy: null
    repository: "nubus/images/wait-for-dependency"
    tag: "0.35.0@sha256:61dfaea28a2b150459138dfd6a554ce53850cee05ef2a72ab47bbe23f2a92d0d"

# -- In seconds, time the given to the pod needs to terminate gracefully.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: ""

# -- Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
#
# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: failure-domain.beta.kubernetes.io/zone
#     whenUnsatisfiable: DoNotSchedule
topologySpreadConstraints: []

# -- Configuration of the UDM Listener that is notified on LDAP changes
config:
  # -- CA root certificate, base64-encoded. Optional; will be written to "caCertFile" if set.
  caCert: ""
  # -- Where to search for the CA Certificate file.
  # caCertFile: "/var/secrets/ca_cert"
  caCertFile: ""
  debugLevel: "2"
  # -- The LDAP Server host, should point to the service name of the ldap-server-primary
  # that the ldap-notifier is sharing a volume with. Example: "ldap-server-notifier"
  ldapHost: ""
  ldapPort: "389"
  # -- NATS: maximum number of reconnect attempts to the NATS server
  nats_max_reconnect_attempts: "5"
  # Delay between retry attempts to the NATS server (in seconds)
  natsRetryDelay: "10"
  # Maximum number of retry attempts for interacting with the NATS server
  natsMaxRetryCount: "3"
  # -- Provisioning-API Hostname
  provisioningApiHost: "provisioning-api"
  # -- Provisioning-API Port
  provisioningApiPort: "80"
  # -- Defaults to "ldapHost" if not set.
  notifierServer: "ldap-notifier"
  # -- Whether to start encryption and validate certificates.
  # Chose from "off", "unvalidated" and "secure".
  tlsMode: "off"
  # -- Path to mount the secrets to.
  secretMountPath: "/var/secrets"

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

## Deployment resources
resources:
  requests:
    cpu: "1"
    memory: "512Mi"
  limits:
    cpu: "2"
    memory: "4Gi"

# -- LDAP client access configuration. This value is in a transition towards the
# unified configuration structure for clients and secrets.
ldap:
  tlsSecret:
    name: ""
    caCertKey: "ca.crt"
  auth:
    bindDn: 'cn=admin,{{ include "udm-listener.ldapBaseDn" . }}'
    password: null
    existingSecret:
      name: null
      keyMapping:
        password: null

# -- NATS client access configuration. This value is in a transition towards the
# unified configuration structure for clients and secrets.
nats:
  connection:
    host: null
    port: "4222"
  auth:
    user: "udmlistener"
    password: null
    existingSecret:
      name: null
      keyMapping:
        password: null

# -- Provisioning API client access configuration. This value is in a transition
# towards the unified configuration structure for clients and secrets.
provisioningApi:
  auth:
    username: "udm"
    password: null
    existingSecret:
      name: null
      keyMapping:
        password: null

livenessProbe:
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Delay after container start until LivenessProbe is executed.
  initialDelaySeconds: 15
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  exec:
    # -- Avoid state in which the listener goes uninitialized after correctly being initialized.
    # This scan occurs if the listener gets a 32 (LDAP_NO_SUCH_OBJECT) return value.
    # See https://docs.software-univention.de/developer-reference/5.0/en/listener/details.html#internal-cache
    command:
      - sh
      - -c
      - 'grep -E "^[13]$" /var/lib/univention-directory-listener/handlers/ldap_listener'

readinessProbe:
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Delay after container start until ReadinessProbe is executed.
  initialDelaySeconds: 15
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  exec:
    command:
      - sh
      - -c
      - |
        exit 0

startupProbe:
  # -- Delay after container start until StartupProbe is executed.
  initialDelaySeconds: 15
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  exec:
    command:
      - sh
      - -c
      - |
        exit 0

# Set PVCs size and storage class
persistence:
  # -- Specify storageClassName - Leave empty to use the default storage class
  storageClass: ""
  # -- Specify PVCs size
  size: 1Gi
